Info: Start Nativelink Simulation process
Info: NativeLink has detected VHDL design -- VHDL simulation models will be used

========= EDA Simulation Settings =====================

Sim Mode              :  RTL
Family                :  cycloneii
Quartus root          :  c:/altera/13.0sp1/quartus/bin64/
Quartus sim root      :  c:/altera/13.0sp1/quartus/eda/sim_lib
Simulation Tool       :  active-hdl
Simulation Language   :  vhdl
Version               :  93
Simulation Mode       :  GUI
Sim Output File       :  
Sim SDF file          :  
Sim dir               :  simulation\activehdl

=======================================================

Info: Starting NativeLink simulation with Active-HDL software
Sourced NativeLink script c:/altera/13.0sp1/quartus/common/tcl/internal/nativelink/active-hdl.tcl
Warning: File sum_top_sim_rtl_vhdl.do already exists - backing up current file as sum_top_sim_rtl_vhdl.do.bak1
error deleting "D:/DE2/sum_top/simulation/activehdl/sum_top\log\console.log": permission denied
Error: NativeLink simulation flow was NOT successful



================The following additional information is provided to help identify the cause of error while running nativelink scripts=================
Nativelink TCL script failed with errorCode:  error deleting "D:/DE2/sum_top/simulation/activehdl/sum_top\log\console.log": permission denied
    while executing
"file delete -force [pwd]/$design_name"
    invoked from within
"if [file isdirectory [pwd]/$design_name] {
			file delete -force [pwd]/$design_name
		}"
    invoked from within
"if [ catch { open $sim_do_file_name w } sim_do_file ] {
		nl_postmsg  error "Error: Can't open file $sim_do_file_name: $file_id"
		set sim_do_file_nam..."
    (procedure "gen_activehdl_script" line 39)
    invoked from within
"gen_activehdl_script args_hash"
    ("eval" body line 1)
    invoked from within
"eval gen_activehdl_script args_hash"
Nativelink TCL script failed with errorInfo:  POSIX EACCES {permission denied}
    invoked from within
"if [ catch {eval gen_activehdl_script args_hash} sim_do_file_name] {

		# when exception is thrown, sim_do_file_name contains the error msg (otherwise..."
    (procedure "launch_sim" line 20)
    invoked from within
"launch_sim launch_args_hash"
    ("eval" body line 1)
    invoked from within
"eval launch_sim launch_args_hash"
    invoked from within
"if [ info exists ::errorCode ] {
				set savedCode $::errorCode
				set savedInfo $::errorInfo
				error $result $savedInfo $savedCode
			} else {
			..."
    invoked from within
"if [catch {eval launch_sim launch_args_hash} result ] {
			set status 1
			if [ info exists ::errorCode ] {
				set savedCode $::errorCode
				set sav..."
    (procedure "run_sim" line 78)
    invoked from within
"run_sim run_sim_args_hash"
    invoked from within
"if [ info exists ::errorCode ] {
			set savedCode $::errorCode
			set savedInfo $::errorInfo
			error "$result" $savedInfo $savedCode
		} else {
			er..."
    (procedure "run_eda_simulation_tool" line 330)
    invoked from within
"run_eda_simulation_tool eda_opts_hash"
