library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;
use std.env.all;
use work.converters.all;

entity top_level_tb is

end entity top_level_tb;

architecture rtl of top_level_tb is
    constant freq   : integer := 50e6;
    constant period : time    := 1000 ms / freq;

    signal CLOCK_50_tb : std_logic                     := '0';
    signal SW_tb       : std_logic_vector(17 downto 0) := (others => '0');
    signal LEDG_tb     : std_logic_vector(8 downto 0)  := (others => '0');

begin
    u0 : entity work.top_level
        port map(
            CLOCK_50 => CLOCK_50_tb,
            SW       => SW_tb,
            LEDG     => LEDG_tb
        );

    CLOCK_50_tb <= not CLOCK_50_tb after period /2;

    sim : process
    begin
        wait for 2 * period;
        for i in 0 to 2 ** 3 - 1 loop
            SW_tb(2 downto 0) <= to_slv(i, 3);
            SW_tb(5 downto 3) <= to_slv(i, 3);
            wait for 2 * period;
        end loop;

        report "Test: OK" severity warning;

        finish;
    end process sim;

end architecture rtl;