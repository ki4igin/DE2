|uart_top
CLOCK_50 => uart:uart1.clk
CLOCK_50 => tx_data[0].CLK
CLOCK_50 => tx_data[1].CLK
CLOCK_50 => tx_data[2].CLK
CLOCK_50 => tx_data[3].CLK
CLOCK_50 => tx_data[4].CLK
CLOCK_50 => tx_data[5].CLK
CLOCK_50 => tx_data[6].CLK
CLOCK_50 => tx_data[7].CLK
CLOCK_50 => tx_ena.CLK
CLOCK_50 => \proc_tx:cnt[0].CLK
CLOCK_50 => \proc_tx:cnt[1].CLK
CLOCK_50 => \proc_tx:cnt[2].CLK
CLOCK_50 => \proc_tx:cnt[3].CLK
CLOCK_50 => \proc_tx:cnt[4].CLK
CLOCK_50 => \proc_tx:cnt[5].CLK
CLOCK_50 => \proc_tx:cnt[6].CLK
CLOCK_50 => \proc_tx:cnt[7].CLK
CLOCK_50 => \proc_tx:cnt[8].CLK
CLOCK_50 => \proc_tx:cnt[9].CLK
CLOCK_50 => \proc_tx:cnt[10].CLK
CLOCK_50 => \proc_tx:cnt[11].CLK
CLOCK_50 => \proc_tx:cnt[12].CLK
CLOCK_50 => \proc_tx:cnt[13].CLK
CLOCK_50 => \proc_tx:cnt[14].CLK
CLOCK_50 => \proc_tx:cnt[15].CLK
CLOCK_50 => \proc_tx:cnt[16].CLK
CLOCK_50 => \proc_tx:cnt[17].CLK
CLOCK_50 => \proc_tx:cnt[18].CLK
CLOCK_50 => \proc_tx:cnt[19].CLK
CLOCK_50 => \proc_tx:cnt[20].CLK
CLOCK_50 => \proc_tx:cnt[21].CLK
CLOCK_50 => \proc_tx:cnt[22].CLK
CLOCK_50 => \proc_tx:cnt[23].CLK
CLOCK_50 => \proc_tx:cnt[24].CLK
CLOCK_50 => \proc_tx:cnt[25].CLK
CLOCK_50 => \proc_tx:cnt[26].CLK
CLOCK_50 => \proc_tx:cnt[27].CLK
CLOCK_50 => \proc_tx:cnt[28].CLK
CLOCK_50 => \proc_tx:cnt[29].CLK
CLOCK_50 => \proc_tx:cnt[30].CLK
CLOCK_50 => \proc_tx:cnt[31].CLK
HEX6[0] <= seg7:seg_low.seg[0]
HEX6[1] <= seg7:seg_low.seg[1]
HEX6[2] <= seg7:seg_low.seg[2]
HEX6[3] <= seg7:seg_low.seg[3]
HEX6[4] <= seg7:seg_low.seg[4]
HEX6[5] <= seg7:seg_low.seg[5]
HEX6[6] <= seg7:seg_low.seg[6]
HEX7[0] <= seg7:seg_high.seg[0]
HEX7[1] <= seg7:seg_high.seg[1]
HEX7[2] <= seg7:seg_high.seg[2]
HEX7[3] <= seg7:seg_high.seg[3]
HEX7[4] <= seg7:seg_high.seg[4]
HEX7[5] <= seg7:seg_high.seg[5]
HEX7[6] <= seg7:seg_high.seg[6]
UART_TXD <= uart:uart1.tx
UART_RXD => uart:uart1.rx


|uart_top|uart:uart1
clk => tx_parity.CLK
clk => tx_buffer[0].CLK
clk => tx_buffer[1].CLK
clk => tx_buffer[2].CLK
clk => tx_buffer[3].CLK
clk => tx_buffer[4].CLK
clk => tx_buffer[5].CLK
clk => tx_buffer[6].CLK
clk => tx_buffer[7].CLK
clk => tx_state.CLK
clk => tx_busy~reg0.CLK
clk => tx~reg0.CLK
clk => tx_count[0].CLK
clk => tx_count[1].CLK
clk => tx_count[2].CLK
clk => tx_count[3].CLK
clk => rx_buffer[0].CLK
clk => rx_buffer[1].CLK
clk => rx_buffer[2].CLK
clk => rx_buffer[3].CLK
clk => rx_buffer[4].CLK
clk => rx_buffer[5].CLK
clk => rx_buffer[6].CLK
clk => rx_buffer[7].CLK
clk => parity_error.CLK
clk => rx_state.CLK
clk => rx_data[0]~reg0.CLK
clk => rx_data[1]~reg0.CLK
clk => rx_data[2]~reg0.CLK
clk => rx_data[3]~reg0.CLK
clk => rx_data[4]~reg0.CLK
clk => rx_data[5]~reg0.CLK
clk => rx_data[6]~reg0.CLK
clk => rx_data[7]~reg0.CLK
clk => rx_error~reg0.CLK
clk => rx_busy~reg0.CLK
clk => rx_count[0].CLK
clk => rx_count[1].CLK
clk => rx_count[2].CLK
clk => rx_count[3].CLK
clk => os_count[0].CLK
clk => os_count[1].CLK
clk => os_count[2].CLK
clk => os_count[3].CLK
clk => os_pulse.CLK
clk => baud_pulse.CLK
clk => count_os[0].CLK
clk => count_os[1].CLK
clk => count_os[2].CLK
clk => count_os[3].CLK
clk => count_os[4].CLK
clk => count_baud[0].CLK
clk => count_baud[1].CLK
clk => count_baud[2].CLK
clk => count_baud[3].CLK
clk => count_baud[4].CLK
clk => count_baud[5].CLK
clk => count_baud[6].CLK
clk => count_baud[7].CLK
clk => count_baud[8].CLK
reset_n => parity_error.ACLR
reset_n => rx_state.ACLR
reset_n => rx_data[0]~reg0.ACLR
reset_n => rx_data[1]~reg0.ACLR
reset_n => rx_data[2]~reg0.ACLR
reset_n => rx_data[3]~reg0.ACLR
reset_n => rx_data[4]~reg0.ACLR
reset_n => rx_data[5]~reg0.ACLR
reset_n => rx_data[6]~reg0.ACLR
reset_n => rx_data[7]~reg0.ACLR
reset_n => rx_error~reg0.ACLR
reset_n => rx_busy~reg0.ACLR
reset_n => rx_count[0].ACLR
reset_n => rx_count[1].ACLR
reset_n => rx_count[2].ACLR
reset_n => rx_count[3].ACLR
reset_n => os_count[0].ACLR
reset_n => os_count[1].ACLR
reset_n => os_count[2].ACLR
reset_n => os_count[3].ACLR
reset_n => tx_state.ACLR
reset_n => tx_busy~reg0.PRESET
reset_n => tx~reg0.PRESET
reset_n => tx_count[0].ACLR
reset_n => tx_count[1].ACLR
reset_n => tx_count[2].ACLR
reset_n => tx_count[3].ACLR
reset_n => os_pulse.ACLR
reset_n => baud_pulse.ACLR
reset_n => count_os[0].ACLR
reset_n => count_os[1].ACLR
reset_n => count_os[2].ACLR
reset_n => count_os[3].ACLR
reset_n => count_os[4].ACLR
reset_n => count_baud[0].ACLR
reset_n => count_baud[1].ACLR
reset_n => count_baud[2].ACLR
reset_n => count_baud[3].ACLR
reset_n => count_baud[4].ACLR
reset_n => count_baud[5].ACLR
reset_n => count_baud[6].ACLR
reset_n => count_baud[7].ACLR
reset_n => count_baud[8].ACLR
reset_n => rx_buffer[0].ENA
reset_n => tx_buffer[7].ENA
reset_n => tx_buffer[6].ENA
reset_n => tx_buffer[5].ENA
reset_n => tx_buffer[4].ENA
reset_n => tx_buffer[3].ENA
reset_n => tx_buffer[2].ENA
reset_n => tx_buffer[1].ENA
reset_n => tx_buffer[0].ENA
reset_n => tx_parity.ENA
reset_n => rx_buffer[1].ENA
reset_n => rx_buffer[2].ENA
reset_n => rx_buffer[3].ENA
reset_n => rx_buffer[4].ENA
reset_n => rx_buffer[5].ENA
reset_n => rx_buffer[6].ENA
reset_n => rx_buffer[7].ENA
tx_ena => tx_buffer.OUTPUTSELECT
tx_ena => tx_buffer.OUTPUTSELECT
tx_ena => tx_buffer.OUTPUTSELECT
tx_ena => tx_buffer.OUTPUTSELECT
tx_ena => tx_buffer.OUTPUTSELECT
tx_ena => tx_buffer.OUTPUTSELECT
tx_ena => tx_buffer.OUTPUTSELECT
tx_ena => tx_buffer.OUTPUTSELECT
tx_ena => tx_parity.OUTPUTSELECT
tx_ena => tx_count.OUTPUTSELECT
tx_ena => tx_count.OUTPUTSELECT
tx_ena => tx_count.OUTPUTSELECT
tx_ena => tx_count.OUTPUTSELECT
tx_ena => tx_state.DATAB
tx_ena => tx_busy~reg0.DATAIN
tx_data[0] => tx_buffer.DATAB
tx_data[1] => tx_buffer.DATAB
tx_data[2] => tx_buffer.DATAB
tx_data[3] => tx_buffer.DATAB
tx_data[4] => tx_buffer.DATAB
tx_data[5] => tx_buffer.DATAB
tx_data[6] => tx_buffer.DATAB
tx_data[7] => tx_buffer.DATAB
tx_busy <= tx_busy~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx <= tx~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx => Mux0.IN5
rx => Mux1.IN5
rx => Mux2.IN5
rx => Mux3.IN5
rx => Mux4.IN2
rx => Mux5.IN2
rx => Mux6.IN2
rx => Mux7.IN2
rx => Mux8.IN5
rx => parity_error.IN1
rx => rx_buffer.DATAB
rx => rx_error.IN1
rx_busy <= rx_busy~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_error <= rx_error~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[0] <= rx_data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[1] <= rx_data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[2] <= rx_data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[3] <= rx_data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[4] <= rx_data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[5] <= rx_data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[6] <= rx_data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[7] <= rx_data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|uart_top|seg7:seg_high
dig[0] => Mux0.IN19
dig[0] => Mux1.IN19
dig[0] => Mux2.IN19
dig[0] => Mux3.IN19
dig[0] => Mux4.IN19
dig[0] => Mux5.IN19
dig[0] => Mux6.IN19
dig[1] => Mux0.IN18
dig[1] => Mux1.IN18
dig[1] => Mux2.IN18
dig[1] => Mux3.IN18
dig[1] => Mux4.IN18
dig[1] => Mux5.IN18
dig[1] => Mux6.IN18
dig[2] => Mux0.IN17
dig[2] => Mux1.IN17
dig[2] => Mux2.IN17
dig[2] => Mux3.IN17
dig[2] => Mux4.IN17
dig[2] => Mux5.IN17
dig[2] => Mux6.IN17
dig[3] => Mux0.IN16
dig[3] => Mux1.IN16
dig[3] => Mux2.IN16
dig[3] => Mux3.IN16
dig[3] => Mux4.IN16
dig[3] => Mux5.IN16
dig[3] => Mux6.IN16
seg[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
seg[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
seg[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
seg[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
seg[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
seg[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
seg[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|uart_top|seg7:seg_low
dig[0] => Mux0.IN19
dig[0] => Mux1.IN19
dig[0] => Mux2.IN19
dig[0] => Mux3.IN19
dig[0] => Mux4.IN19
dig[0] => Mux5.IN19
dig[0] => Mux6.IN19
dig[1] => Mux0.IN18
dig[1] => Mux1.IN18
dig[1] => Mux2.IN18
dig[1] => Mux3.IN18
dig[1] => Mux4.IN18
dig[1] => Mux5.IN18
dig[1] => Mux6.IN18
dig[2] => Mux0.IN17
dig[2] => Mux1.IN17
dig[2] => Mux2.IN17
dig[2] => Mux3.IN17
dig[2] => Mux4.IN17
dig[2] => Mux5.IN17
dig[2] => Mux6.IN17
dig[3] => Mux0.IN16
dig[3] => Mux1.IN16
dig[3] => Mux2.IN16
dig[3] => Mux3.IN16
dig[3] => Mux4.IN16
dig[3] => Mux5.IN16
dig[3] => Mux6.IN16
seg[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
seg[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
seg[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
seg[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
seg[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
seg[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
seg[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


